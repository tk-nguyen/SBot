on:
  pull_request:
  push:
    paths:
      - "src/**"
      - "Cargo*"
    branches:
      - master
    tags:
      - "v*.*.*"

name: Build and publish binaries

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      cache: ${{ steps.cache.outputs.cache-hit }}
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

  publish:
    name: Publish
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu

    steps:
      - name: Restore cache
        uses: Swatinem/rust-cache@v2

      - name: Tar up binaries
        run: |
          if [[ ${{ matrix.target }} == "x86_64-pc-windows-gnu" ]]; then
            mv target/${{ matrix.target }}/release/sbot.exe .
            chmod +x sbot.exe
          else
            mv target/${{ matrix.target }}/release/sbot .
            chmod +x sbot
          fi
          tar czvf sbot-${{ matrix.target }}.tar.gz sbot*

      - name: Publish binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: "sbot*.tar.gz"
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
